{
  "documentation": "https://cwiki.apache.org/confluence/display/solr/Collections+API#CollectionsAPI-api1",
  "methods": [
    "POST"
  ],
  "url": {
    "paths": [
      "/collections",
      "/c"
    ]
  },
  "commands": {
    "create": {
      "type": "object",
      "documentation": "https://cwiki.apache.org/confluence/display/solr/Collections+API#CollectionsAPI-api1",
      "description": "",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the collection to be created."
        },
        "config": {
          "type": "string",
          "description": "Defines the name of the configurations (which must already be stored in ZooKeeper) to use for this collection. If not provided, Solr will default to the collection name as the configuration name."
        },
        "router": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "enum":["implicit","compositeId"],
              "description": "Router implementation compositeId or implicit",
              "default": "compositeId"
            },
            "field": {
              "type": "string",
              "description": "Field on which doc routing is done"
            }
          }
        },
        "numShards": {
          "type": "number",
          "description": "The number of shards to be created as part of the collection. This is a required parameter when using the 'compositeId' router."
        },
        "shards": {
          "type": "string",
          "description": "A comma separated list of shard names, e.g., shard-x,shard-y,shard-z . This is a required parameter when using the 'implicit' router."
        },
        "replicationFactor": {
          "type": "number",
          "description": "The number of replicas to be created for each shard."
        },
        "nodeSet": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "list of node_names"
        },
        "shuffleNodes": {
          "type": "boolean",
          "description": "Controls wether or not the shard-replicas created for this collection will be assigned to the nodes specified by the createNodeSet in a sequential manner, or if the list of nodes should be shuffled prior to creating individual replicas.  A 'false' value makes the results of a collection creation predictible and gives more exact control over the location of the individual shard-replicas, but 'true' can be a better choice for ensuring replicas are distributed evenly across nodes. Ignored if createNodeSet is not also specified."
        },
        "maxShardsPerNode": {
          "type": "integer",
          "description": "When creating collections, the shards and/or replicas are spread across all available (i.e., live) nodes, and two replicas of the same shard will never be on the same node. If a node is not live when the CREATE operation is called, it will not get any parts of the new collection, which could lead to too many replicas being created on a single live node. Defining maxShardsPerNode sets a limit on the number of replicas CREATE will spread to each node. If the entire collection can not be fit into the live nodes, no collection will be created at all."
        },
        "autoAddReplicas": {
          "type": "boolean",
          "description": "When set to true, enables auto addition of replicas on shared file systems. See the section autoAddReplicas Settings for more details on settings and overrides."
        },
        "rule": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "replica placement rules. See the section Rule-based Replica Placement for details."
        },
        "snitch": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": ""
        },
        "properties": {
          "type": "object",
          "additionalProperties": true
        },
        "async": {
          "type": "string",
          "description": "Request ID to track this action which will be processed asynchronously"
        }
      },
      "required": [
        "name"
      ]
    },
    "create-alias": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The alias name to be created"
        },
        "collections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of collections to be aliased"
        },
        "async": {
          "type": "string",
          "description": "Request ID to track this action which will be processed asynchronously"
        }
      },
      "required": [
        "name",
        "collections"
      ],
      "documentation": "https://cwiki.apache.org/confluence/display/solr/Collections+API#CollectionsAPI-api4",
      "description": " create or modify an alias for a collection"
    },
    "delete-alias": {
      "documentation": "https://cwiki.apache.org/confluence/display/solr/Collections+API#CollectionsAPI-api5",
      "description": "Delete a Collection Alias",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the alias to delete"
        },
        "async": {
          "type": "string",
          "description": "Request ID to track this action which will be processed asynchronously"
        }
      },
      "required":["name"]
    },
    "backup-collection": {
      "documentation": "https://cwiki.apache.org/confluence/display/solr/Collections+API#CollectionsAPI-Backup",
      "description": "Backup Solr indexes and configurations for a specifc collection",
      "type": "object",
      "properties": {
        "collection": {
          "type": "string",
          "description": "Name of the collection"
        },
        "name": {
          "type": "string",
          "description": "Name of the backup"
        },
        "location": {
          "type": "string",
          "description": "The location on the shared drive for the backup command to write to. Alternately it can be set as a cluster property"
        },
        "async": {
          "type": "string",
          "description": "Request ID to track this action which will be processed asynchronously"
        }
      },
      "required": [
        "collection",
        "name",
        "location"
      ]
    },
    "restore-collection": {
      "description": "Restore Solr indexes and configurations for a specific collection",
      "documentation": "https://cwiki.apache.org/confluence/display/solr/Collections+API#CollectionsAPI-Restore",
      "type": "object",
      "properties": {
        "collection": {
          "type": "string",
          "description": "Name of the collection"
        },
        "name": {
          "type": "string",
          "description": "Name of the backup"
        },
        "location": {
          "type": "string",
          "description": "The location on the shared drive for the backup command to write to. Alternately it can be set as a cluster property"
        },
        "async": {
          "type": "string",
          "description": "Request ID to track this action which will be processed asynchronously"
        }
      },
      "required": [
        "collection",
        "name",
        "location"
      ]
    }
  }
}
